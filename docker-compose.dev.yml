version: '3.8'

services:
  # Banco de dados PostgreSQL para desenvolvimento
  postgres:
    image: postgres:15-alpine
    container_name: validador-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: validador_questoes_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação em modo desenvolvimento
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: validador-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/validador_questoes_dev
      JWT_SECRET: dev-jwt-secret
      JWT_REFRESH_SECRET: dev-refresh-secret
      JWT_ACCESS_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - app_dev_logs:/app/logs
    command: npm run start:debug

  # Redis para cache em desenvolvimento
  redis:
    image: redis:7-alpine
    container_name: validador-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  # Adminer para gerenciar banco de dados
  adminer:
    image: adminer:latest
    container_name: validador-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  app_dev_logs:
    driver: local

networks:
  default:
    name: validador-dev-network